 REACT_APP_CLOUDINARY_CLOUD_NAME=dbbrkd8ea

 REACT_APP_API_KEY  = "https://localhost:8000/"

   
#    import { useDropzone } from 'react-dropzone';



#        const [photo, setPhoto] = useState(null);



#    const formData = new FormData();

#    if (photo) {
#                 formData.append('photo', photo);
#             }


#    const { getRootProps, getInputProps, isDragActive } = useDropzone({
#         accept: 'image/*',
#         maxSize: 20971520, // 20 MB limit
#         onDrop: (acceptedFiles) => {
#             if (acceptedFiles.length > 0) {
#                 const file = acceptedFiles[0];
#                 if (file.size <= 20971520) { // Check if file size is within limit
#                     setPhoto(file);
#                 } else {
#                     toast.error('File size exceeds 20 MB limit');
#                 }
#             }
#         }
#     });








import { useDropzone } from 'react-dropzone';










  const { getRootProps, getInputProps, isDragActive } = useDropzone({
        accept: 'image/*',
        maxSize: 20971520, // 20 MB limit
        onDrop: (acceptedFiles) => {
            if (acceptedFiles.length > 0) {
                const file = acceptedFiles[0];
                if (file.size <= 20971520) {
                    setPhoto(file);
                } else {
                    alert('Dosya boyutu 20 MB limitini aşıyor.');
                }
            }
        }
    });






    const handleFormSubmit = async (e, formData, setFormData, url, setItems) => {
        e.preventDefault();
        setError('');
        setSuccess(false);

        const data = new FormData();
        data.append('title', formData.title);
        data.append('price', formData.price);
        if (photo) {
            data.append('photo', photo);
        }

        try {
            const response = await axios.post(url, data, {
                headers: {
                    'Content-Type': 'multipart/form-data',
                },
            });

            setSuccess(true);
            setFormData({ title: '', price: '' });
            setPhoto(null); // Fotoğrafı temizle
            fetchItems(url, setItems); // Öğeleri yeniden yükle

            setTimeout(() => {
                window.location.reload();
            }, 1000);

        } catch (error) {
            console.error('Error:', error);
            setError('Bir hata oluştu. Lütfen tekrar deneyin.');
        }
    };


  <div {...getRootProps()} className={styles.dropzone}>
                <input {...getInputProps()} />
                {isDragActive ? <p>Dosyayı buraya bırakın...</p> : <p>Fotoğraf yüklemek için tıklayın veya sürükleyin.</p>}
            </div>
            {photo && <p>Yüklü fotoğraf: {photo.name}</p>}



            onSubmit={(e) => handleFormSubmit(e, form1, setForm1, 'https://grez-shop.vercel.app/api/pubg/postt', setItems1)} className={styles.form}

                                    onChange={(e) => setForm1({ ...form1, title: e.target.value })}
